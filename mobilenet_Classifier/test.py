# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RRdirs8KJbDOXkJSmITZ2fh3LJ9jLWIT

# Importing libraries
"""

from tensorflow.keras.applications import mobilenet_v2
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.vgg19 import preprocess_input
from tensorflow.keras.models import Model
from tensorflow.keras.models import load_model
import numpy as np

# other imports
import json
import datetime
import time
import glob
import os

# config variables
test_path     = "/content/drive/MyDrive/BE project/test"
weights    = "imagenet"

print ("Loading model...")
model = load_model('/content/drive/MyDrive/BE project/new_model.h5')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/BE project

print(os.listdir(test_path))

img = image.load_img("test/"+"pic0 (29).jpg", target_size=(224, 224))

"""# Testing"""

print ("Testing images...")

for i in (os.listdir(test_path)):
    print(i)
    #print("- class: {}".format(folder))
    success = 0
    average_confidence = 0
    img = image.load_img("test/"+i, target_size=(224, 224))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)
    y_prob = model.predict(x)
    print("y_prob: ",y_prob)
    y_class = y_prob.argmax(axis=-1)
    y_class = y_class[0]
    y_confidence = int(y_prob[0][y_class] * 100)
    print("predicted label: {} (prob = {})".format(y_class, y_confidence))
#success = int(100*success/len(i))
#average_confidence = int(average_confidence / len(i))
#print("class '{}': success rate = {}% with {}% avg confidence".format(i, success, average_confidence))

